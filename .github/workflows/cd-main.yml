name: Deploy to Azure VM

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up SSH for Azure VM
        run: |
          mkdir -p ~/.ssh
          echo "$AZURE_SSH_BACKEND_KEY" > ~/.ssh/id_rsa_azure
          chmod 600 ~/.ssh/id_rsa_azure
          ssh-keyscan -H ${{ secrets.AZURE_VM_IP }} >> ~/.ssh/known_hosts
        env:
          AZURE_SSH_BACKEND_KEY: ${{ secrets.AZURE_SSH_BACKEND_KEY }}

      - name: Clone Backend Repo
        env:
          AZURE_SSH_BACKEND_KEY: ${{ secrets.AZURE_SSH_BACKEND_KEY }}
          AZURE_VM_USERNAME: ${{ secrets.AZURE_VM_USERNAME }}
          AZURE_VM_IP: ${{ secrets. AZURE_VM_IP }}
        run: |
          mkdir -p ~/.ssh
          echo "$AZURE_SSH_BACKEND_KEY" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh -i ~/.ssh/id_rsa -o StrictHostKeyChecking=no ${{ secrets.AZURE_VM_USERNAME }}@${{ secrets.AZURE_VM_IP }} \
            "cd .ssh/ && \
             rm -rf config && \
             cd ../ && \
             chmod 600 ~/.ssh/id_rsa && \
             echo -e 'Host github.com\n  HostName github.com\n  IdentityFile ~/.ssh/id_rsa' >> ~/.ssh/config && \
             git clone -v git@github.com:${{ github.repository }}.git backend || \
             (cd backend && git pull origin main)"

  trigger-e2e:
    needs: deploy
    runs-on: ubuntu-latest
    steps:
      - name: Generate GitHub App Token
        id: generate-token
        uses: tibdex/github-app-token@v1
        with:
          app_id: ${{ secrets.APP_ID }}
          private_key: ${{ secrets.APP_PRIVATE_KEY }}

      - name: Trigger E2E Workflow
        run: |
          curl -X POST \
            -H "Authorization: Bearer ${{ steps.generate-token.outputs.token }}" \
            -H "Accept: application/vnd.github.v3+json" \
            https://api.github.com/repos/demo-project-integrate/e2e/dispatches \
            -d '{"event_type": "trigger_e2e"}'
